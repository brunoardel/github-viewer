{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hardel/Estudos/react-avancado/won-games/client/src/components/GameCardSlider/index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ArrowBackIos as ArrowLeft } from '@styled-icons/material-outlined/ArrowBackIos';\nimport { ArrowForwardIos as ArrowRight } from '@styled-icons/material-outlined/ArrowForwardIos';\nimport Slider from 'components/Slider';\nimport GameCard from 'components/GameCard';\nimport * as S from './styles';\nvar settings = {\n  arrows: true,\n  slidesToShow: 4,\n  infinite: false,\n  lazyLoad: 'ondemand',\n  responsive: [{\n    breakpoint: 1375,\n    settings: {\n      arrows: false,\n      slidesToShow: 3.2\n    }\n  }, {\n    breakpoint: 1024,\n    settings: {\n      arrows: false,\n      slidesToShow: 2.2\n    }\n  }, {\n    breakpoint: 570,\n    settings: {\n      arrows: false,\n      slidesToShow: 1.2\n    }\n  }, {\n    breakpoint: 375,\n    settings: {\n      arrows: false,\n      slidesToShow: 1.1\n    }\n  }],\n  nextArrow: /*#__PURE__*/_jsxDEV(ArrowRight, {\n    \"aria-label\": \"next games\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 14\n  }, this),\n  prevArrow: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n    \"aria-label\": \"previous games\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 14\n  }, this)\n};\n\nvar GameCardSlider = function GameCardSlider(_ref) {\n  var items = _ref.items,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'white' : _ref$color;\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    color: color,\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      settings: settings,\n      children: items.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(GameCard, _objectSpread({}, item), index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = GameCardSlider;\nexport default GameCardSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCardSlider\");","map":{"version":3,"sources":["/home/hardel/Estudos/react-avancado/won-games/client/src/components/GameCardSlider/index.tsx"],"names":["ArrowBackIos","ArrowLeft","ArrowForwardIos","ArrowRight","Slider","GameCard","S","settings","arrows","slidesToShow","infinite","lazyLoad","responsive","breakpoint","nextArrow","prevArrow","GameCardSlider","items","color","map","item","index"],"mappings":";;;;;;;;;;AAAA,SAASA,YAAY,IAAIC,SAAzB,QAA0C,8CAA1C;AACA,SAASC,eAAe,IAAIC,UAA5B,QAA8C,iDAA9C;AAEA,OAAOC,MAAP,MAAuC,mBAAvC;AACA,OAAOC,QAAP,MAAwC,qBAAxC;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,IAAMC,QAAwB,GAAG;AAC/BC,EAAAA,MAAM,EAAE,IADuB;AAE/BC,EAAAA,YAAY,EAAE,CAFiB;AAG/BC,EAAAA,QAAQ,EAAE,KAHqB;AAI/BC,EAAAA,QAAQ,EAAE,UAJqB;AAK/BC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,UAAU,EAAE,IADd;AAEEN,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,YAAY,EAAE;AAFN;AAFZ,GADU,EAQV;AACEI,IAAAA,UAAU,EAAE,IADd;AAEEN,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,YAAY,EAAE;AAFN;AAFZ,GARU,EAeV;AACEI,IAAAA,UAAU,EAAE,GADd;AAEEN,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,YAAY,EAAE;AAFN;AAFZ,GAfU,EAsBV;AACEI,IAAAA,UAAU,EAAE,GADd;AAEEN,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,YAAY,EAAE;AAFN;AAFZ,GAtBU,CALmB;AAmC/BK,EAAAA,SAAS,eAAE,QAAC,UAAD;AAAY,kBAAW;AAAvB;AAAA;AAAA;AAAA;AAAA,UAnCoB;AAoC/BC,EAAAA,SAAS,eAAE,QAAC,SAAD;AAAW,kBAAW;AAAtB;AAAA;AAAA;AAAA;AAAA;AApCoB,CAAjC;;AA4CA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,wBAAUC,KAAV;AAAA,MAAUA,KAAV,2BAAkB,OAAlB;AAAA,sBACrB,QAAC,CAAD,CAAG,OAAH;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEX,QAAlB;AAAA,gBACGU,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACT,QAAC,QAAD,oBAA0BD,IAA1B,GAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADqB;AAAA,CAAvB;;KAAML,c;AAUN,eAAeA,cAAf","sourcesContent":["import { ArrowBackIos as ArrowLeft } from '@styled-icons/material-outlined/ArrowBackIos'\nimport { ArrowForwardIos as ArrowRight } from '@styled-icons/material-outlined/ArrowForwardIos'\n\nimport Slider, { SliderSettings } from 'components/Slider'\nimport GameCard, { GameCardProps } from 'components/GameCard'\n\nimport * as S from './styles'\n\nconst settings: SliderSettings = {\n  arrows: true,\n  slidesToShow: 4,\n  infinite: false,\n  lazyLoad: 'ondemand',\n  responsive: [\n    {\n      breakpoint: 1375,\n      settings: {\n        arrows: false,\n        slidesToShow: 3.2\n      }\n    },\n    {\n      breakpoint: 1024,\n      settings: {\n        arrows: false,\n        slidesToShow: 2.2\n      }\n    },\n    {\n      breakpoint: 570,\n      settings: {\n        arrows: false,\n        slidesToShow: 1.2\n      }\n    },\n    {\n      breakpoint: 375,\n      settings: {\n        arrows: false,\n        slidesToShow: 1.1\n      }\n    }\n  ],\n  nextArrow: <ArrowRight aria-label=\"next games\" />,\n  prevArrow: <ArrowLeft aria-label=\"previous games\" />\n}\n\nexport type GameCardSliderProps = {\n  items: GameCardProps[]\n  color?: 'white' | 'black'\n}\n\nconst GameCardSlider = ({ items, color = 'white' }: GameCardSliderProps) => (\n  <S.Wrapper color={color}>\n    <Slider settings={settings}>\n      {items.map((item, index) => (\n        <GameCard key={index} {...item} />\n      ))}\n    </Slider>\n  </S.Wrapper>\n)\n\nexport default GameCardSlider\n"]},"metadata":{},"sourceType":"module"}